services:
  postgres:
    container_name: postgres_sql
    image: postgres:16.3-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: chatapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - chatapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d chatapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  keycloak:
    container_name: keycloak-chatapp
    image: bitnami/keycloak:24.0.4
    ports:
      - 9090:8080
    environment:
      KEYCLOAK_DATABASE_HOST: postgres_sql
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: keycloak_db
      KEYCLOAK_DATABASE_USER: admin
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HOSTNAME: keycloak:8080
      KC_HTTP_PORT: 8080
      KC_PROXY: edge
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: "true"
      KEYCLOAK_EXTRA_ARGS: "--import-realm"
    volumes:
      - ./chatspot-realm.json:/opt/bitnami/keycloak/data/import/chatspot-chatapp-realm.json
    networks:
      - chatapp-network
    depends_on:
      postgres:
        condition: service_healthy

    restart: unless-stopped

  kafka_broker:
    image: bitnami/kafka:3.7
    container_name: kafka_broker
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_broker:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka_broker:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Topic settings
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    user: root
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka_broker:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - chatapp-network
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: kafka_ui
    depends_on:
      kafka_broker:
        condition: service_healthy
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_broker:9092
      KAFKA_CLUSTERS_0_READONLY: "false"
    networks:
      - chatapp-network
    restart: unless-stopped

  chatapp:
    build:
      context: ./chatapp
      dockerfile: Dockerfile
    container_name: chatapp_backend
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
      kafka_broker:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres_sql
      DB_PORT: 5432
      DB_NAME: chatapp
      DB_USERNAME: admin
      DB_PASSWORD: password
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/chatspot-chatapp
      KAFKA_BOOTSTRAP_SERVERS: kafka_broker:9092
      MEDIA_PICTURE_PATH: /app/root/picture
      MEDIA_VIDEO_PATH: /app/root/video
      MEDIA_PROFILE_PATH: /app/root/profile
      LOG_LEVEL: INFO
    command: sh -c "sleep 30 && java -jar /app/app.jar"
    volumes:
      - chatapp_media:/app/root
    networks:
      - chatapp-network
    restart: unless-stopped

networks:
  chatapp-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  chatapp_media:
    driver: local
  kafka_data:
    driver: local